#ifndef yrs_h
#define yrs_h

/* Autogenerated by cbindgen. Do not modify. */

#include <stdint.h>
#include <stdlib.h>

typedef struct Doc Doc;

/**
 * # Safety
 * This must be called with a valid doc pointer
 * change must point to a valid memory location with at least len bytes
 */
void yrs_apply_update(Doc *doc, uintptr_t len, const uint8_t *update);

/**
 * # Safety
 * This must be called with a valid doc pointer
 */
intptr_t yrs_encode_state_as_update(Doc *doc);

/**
 * # Safety
 * This must be called with a valid doc pointer
 */
void yrs_free(Doc *doc);

Doc *yrs_init(void);

/**
 * # Safety
 * This must be called with a valid doc pointer
 */
void yrs_insert(Doc *doc, uint32_t index, char change);

/**
 * # Safety
 *
 * This must be called with a valid doc pointer
 * the buffer must be a valid pointer pointing to at least as much space as was
 * required by the previous binary result call
 */
void yrs_read_binary_buffer(Doc *doc, uint8_t *buffer);

/**
 * # Safety
 * This must be called with a valid doc pointer
 * and buffer must be a valid pointer of at least the number of bytes returned by the previous
 * call that generated a text result
 */
void yrs_read_text_buffer(Doc *doc, char *buffer);

/**
 * # Safety
 * This must be called with a valid doc pointer
 */
intptr_t yrs_to_string(Doc *doc);

#endif /* yrs_h */
